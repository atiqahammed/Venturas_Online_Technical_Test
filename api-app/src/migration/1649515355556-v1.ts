import {MigrationInterface, QueryRunner} from "typeorm";

export class v11649515355556 implements MigrationInterface {
    name = 'v11649515355556'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "tblTransactionReceiptStatus" ("Id" SERIAL NOT NULL, "CreateDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "CreatedBy" character varying(300), "ModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "LastChangedBy" character varying(300), "Name" character varying(300), "Email" character varying(300) NOT NULL, "Remarks" character varying(300), "ZipCode" character varying(300), "Address" character varying(300), "PhoneNumber" character varying(300), "Image" character varying(300), "TxHash" character varying(300), "MiningStatus" character varying(20) NOT NULL, "TxFee" character varying, "Result" character varying(20), "ErrorReason" character varying(255), "Receipt" character varying, "AdminEoaNonce" integer, "AdminKuwNonce" integer, "ForwarderNonce" integer, "GasPriceLevel" integer, "GasPriceGwei" integer, "transactionReceiptId" integer, CONSTRAINT "PK_17912a952edf2cfb6a0d11e8778" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TYPE "public"."tblTransactionReceipt_queuestatus_enum" AS ENUM('Draft', 'Initialized', 'Complete', 'Error', 'Duplicate', 'Queue')`);
        await queryRunner.query(`CREATE TYPE "public"."tblTransactionReceipt_functionname_enum" AS ENUM('createNFTBatch', 'marketplaceTransferNFT', 'setPrice', 'createProject', 'Vote', 'createProposal', 'allocationBreakdown', 'tokenAllocation', 'supportProject')`);
        await queryRunner.query(`CREATE TABLE "tblTransactionReceipt" ("Id" SERIAL NOT NULL, "CreateDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "CreatedBy" character varying(300), "ModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "LastChangedBy" character varying(300), "Name" character varying(300), "Email" character varying(300) NOT NULL, "Remarks" character varying(300), "ZipCode" character varying(300), "Address" character varying(300), "PhoneNumber" character varying(300), "Image" character varying(300), "UUId" character varying(300) NOT NULL, "QueueStatus" "public"."tblTransactionReceipt_queuestatus_enum" NOT NULL, "TxData" character varying, "TxValue" character varying, "ToAddress" character varying(300), "FromAddress" character varying(300), "FunctionName" "public"."tblTransactionReceipt_functionname_enum" NOT NULL, "FunctionArguments" character varying NOT NULL, "FunctionArgumentsHash" character varying NOT NULL, "SigningEOA" character varying(300), "SignedBytes" character varying, "OwnerAddress" character varying(300), "ChainType" character varying(50), "ChainId" integer, "TryCount" integer, "BlockedBy" integer, "Priority" integer, "IsActive" boolean NOT NULL DEFAULT true, "ResendCount" integer, "BlockedTrxId" integer, "ProjectID" integer, CONSTRAINT "PK_bd3a5233dc805c8e57b8d38b5b3" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TYPE "public"."tblNftTransfer_operation_enum" AS ENUM('Create', 'Transfer')`);
        await queryRunner.query(`CREATE TABLE "tblNftTransfer" ("Id" SERIAL NOT NULL, "CreateDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "CreatedBy" character varying(300), "ModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "LastChangedBy" character varying(300), "Name" character varying(300), "Email" character varying(300) NOT NULL, "Remarks" character varying(300), "ZipCode" character varying(300), "Address" character varying(300), "PhoneNumber" character varying(300), "Image" character varying(300), "UUId" character varying(300) NOT NULL, "TokenId" character varying(2048) NOT NULL, "Operation" "public"."tblNftTransfer_operation_enum" NOT NULL, "From" character varying(300) NOT NULL, "To" character varying(300) NOT NULL, "ProjectId" integer NOT NULL, "NftInfoId" integer NOT NULL, CONSTRAINT "PK_5f4a9104c4dbc3e5974a41ce280" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "tblNftInfo" ("Id" SERIAL NOT NULL, "CreateDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "CreatedBy" character varying(300), "ModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "LastChangedBy" character varying(300), "Name" character varying(300), "Email" character varying(300) NOT NULL, "Remarks" character varying(300), "ZipCode" character varying(300), "Address" character varying(300), "PhoneNumber" character varying(300), "Image" character varying(300), "TxStatus" character varying(20) NOT NULL, "TokenId" character varying(2048) NOT NULL, "MetaDataJson" character varying NOT NULL, "Url" character varying(2048) NOT NULL, "MetaDataHash" character varying NOT NULL, "CurrentOwner" character varying(300) NOT NULL, "MinterContractAddress" character varying(300) NOT NULL, "IsNewNFT" boolean NOT NULL DEFAULT true, "ProjectId" integer NOT NULL, CONSTRAINT "PK_fc622c2f5a5a690990d15a6f75c" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "tblVote" ("Id" SERIAL NOT NULL, "CreateDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "CreatedBy" character varying(300), "ModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "LastChangedBy" character varying(300), "Name" character varying(300), "Email" character varying(300) NOT NULL, "Remarks" character varying(300), "ZipCode" character varying(300), "Address" character varying(300), "PhoneNumber" character varying(300), "Image" character varying(300), "GroupId" integer, "EOA" character varying(300) NOT NULL, "Vote" character varying(300) NOT NULL, "Date" TIMESTAMP NOT NULL, "ProposalId" integer NOT NULL, "ProjectId" integer NOT NULL, CONSTRAINT "PK_57b1b9c9e30d02ac657c83316a3" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "tblTokenDistribution" ("Id" SERIAL NOT NULL, "CreateDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "CreatedBy" character varying(300), "ModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "LastChangedBy" character varying(300), "Name" character varying(300), "Email" character varying(300) NOT NULL, "Remarks" character varying(300), "ZipCode" character varying(300), "Address" character varying(300), "PhoneNumber" character varying(300), "Image" character varying(300), "EOA" character varying(300) NOT NULL, "Percent" numeric, "CalculatedBy" character varying(100) NOT NULL, "ProjectId" integer NOT NULL, "TokenDistributionTypeId" integer NOT NULL, CONSTRAINT "PK_0231f516ba8ecb123bd73a9eb03" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "tblTokenDistributionType" ("Id" SERIAL NOT NULL, "CreateDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "CreatedBy" character varying(300), "ModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "LastChangedBy" character varying(300), "Name" character varying(300), "Email" character varying(300) NOT NULL, "Remarks" character varying(300), "ZipCode" character varying(300), "Address" character varying(300), "PhoneNumber" character varying(300), "Image" character varying(300), "Allocation" numeric, "CalculatedBy" character varying(100) NOT NULL, "Type" character varying(100), "FundStartDate" TIMESTAMP WITH TIME ZONE, "FundEndDate" TIMESTAMP WITH TIME ZONE, "FundTokenPrice" numeric, "FundTargetAmount" integer, "FundMinimumAmount" integer, "FundUnit" character varying(300), "ProjectId" integer NOT NULL, CONSTRAINT "PK_2f5f24d8eb70927d92ba8b5f363" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "tblFundRising" ("Id" SERIAL NOT NULL, "CreateDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "CreatedBy" character varying(300), "ModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "LastChangedBy" character varying(300), "Name" character varying(300), "Email" character varying(300) NOT NULL, "Remarks" character varying(300), "ZipCode" character varying(300), "Address" character varying(300), "PhoneNumber" character varying(300), "Image" character varying(300), "TokenPrice" numeric, "TargetAmount" integer, "MinimumAmount" integer, "Unit" character varying(300), "StartDate" TIMESTAMP WITH TIME ZONE NOT NULL, "EndDate" TIMESTAMP WITH TIME ZONE NOT NULL, "ProjectId" integer NOT NULL, CONSTRAINT "PK_e75c46a247f288827087a5a09e4" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "tblSupportProject" ("Id" SERIAL NOT NULL, "CreateDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "CreatedBy" character varying(300), "ModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "LastChangedBy" character varying(300), "Name" character varying(300), "Email" character varying(300) NOT NULL, "Remarks" character varying(300), "ZipCode" character varying(300), "Address" character varying(300), "PhoneNumber" character varying(300), "Image" character varying(300), "Amount" integer, "EOA" character varying(300) NOT NULL, "Unit" character varying(300), "Date" TIMESTAMP NOT NULL, "ProjectId" integer NOT NULL, CONSTRAINT "PK_20f4a6d045278f4c92aedf6ba8c" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "tblProject" ("Id" SERIAL NOT NULL, "CreateDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "CreatedBy" character varying(300), "ModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "LastChangedBy" character varying(300), "Name" character varying(300), "Email" character varying(300) NOT NULL, "Remarks" character varying(300), "ZipCode" character varying(300), "Address" character varying(300), "PhoneNumber" character varying(300), "Image" character varying(300), "Web2ProjectId" integer NOT NULL, "deploymentStep" integer, "ProjectTypeId" character varying(300), "ContractAddress" character varying(300), "TokenName" character varying(300), "TokenSymbol" character varying(300), "maxToken" integer NOT NULL, "VotingPower" character varying(300), "WhoCanVote" character varying(300), "FundRisingNeeded" boolean NOT NULL DEFAULT false, "Status" integer NOT NULL, CONSTRAINT "PK_0ad9f8e465aaeaa558d145638ba" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "tblProposal" ("Id" SERIAL NOT NULL, "CreateDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "CreatedBy" character varying(300), "ModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "LastChangedBy" character varying(300), "Name" character varying(300), "Email" character varying(300) NOT NULL, "Remarks" character varying(300), "ZipCode" character varying(300), "Address" character varying(300), "PhoneNumber" character varying(300), "Image" character varying(300), "Web2ProposalId" integer, "GroupId" integer, "ProposalType" character varying(300) NOT NULL, "ProposalText" character varying(300) NOT NULL, "Action" character varying(300) NOT NULL, "MinimumThreshold" integer, "ExpiryDate" TIMESTAMP NOT NULL, "ActionPerformDate" TIMESTAMP NOT NULL, "InstantTrigger" character varying NOT NULL, "Data" character varying NOT NULL, "Url" character varying(2048), "ProjectId" integer NOT NULL, CONSTRAINT "PK_e05a5b7c094b66a851a1d8ec7ea" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "tblBlackListedProposalEOA" ("Id" SERIAL NOT NULL, "CreateDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "CreatedBy" character varying(300), "ModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "LastChangedBy" character varying(300), "Name" character varying(300), "Email" character varying(300) NOT NULL, "Remarks" character varying(300), "ZipCode" character varying(300), "Address" character varying(300), "PhoneNumber" character varying(300), "Image" character varying(300), "EOA" character varying(300) NOT NULL, "ProposalId" integer NOT NULL, CONSTRAINT "PK_8c11f1dc3665ef7528a5f2a8db7" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "tblCallbackRequest" ("Id" SERIAL NOT NULL, "CreateDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "CreatedBy" character varying(300), "ModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "LastChangedBy" character varying(300), "Name" character varying(300), "Email" character varying(300) NOT NULL, "Remarks" character varying(300), "ZipCode" character varying(300), "Address" character varying(300), "PhoneNumber" character varying(300), "Image" character varying(300), "UUId" character varying(50) NOT NULL, "Body" character varying NOT NULL, "Response" character varying NOT NULL, "Status" character varying(50) NOT NULL, "URL" character varying NOT NULL, "CallbackName" character varying(50) NOT NULL, "Version" character varying(50) NOT NULL, "ProjectId" integer NOT NULL, CONSTRAINT "PK_eaad85bfc097c410cae28d87efd" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "tblCompany" ("Id" SERIAL NOT NULL, "CreateDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "CreatedBy" character varying(300), "ModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "LastChangedBy" character varying(300), "Name" character varying(300), "Email" character varying(300) NOT NULL, "Remarks" character varying(300), "ZipCode" character varying(300), "Address" character varying(300), "PhoneNumber" character varying(300), "Image" character varying(300), "CopanyNameKana" character varying(300), "URLOfHP" character varying(300), "DateOfEstablishment" character varying(300), "OwnerId" integer NOT NULL, CONSTRAINT "PK_d2d6e9f5cbbe6465203000fdddb" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "tblInvitation" ("Id" SERIAL NOT NULL, "CreateDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "CreatedBy" character varying(300), "ModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "LastChangedBy" character varying(300), "Name" character varying(300), "Email" character varying(300) NOT NULL, "Remarks" character varying(300), "ZipCode" character varying(300), "Address" character varying(300), "PhoneNumber" character varying(300), "Image" character varying(300), "UserType" character varying(300), "CompanyId" integer, "InvitedBy" integer, "Status" character varying(300), "TemporaryPassword" character varying(300), "UUID" character varying(300), CONSTRAINT "PK_ecd20aa2e122be3248cf3fb3eea" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "tblUserInfo" ("Id" SERIAL NOT NULL, "CreateDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "CreatedBy" character varying(300), "ModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "LastChangedBy" character varying(300), "Name" character varying(300), "Email" character varying(300) NOT NULL, "Remarks" character varying(300), "ZipCode" character varying(300), "Address" character varying(300), "PhoneNumber" character varying(300), "Image" character varying(300), "Department" character varying(300), "DateOfBirth" character varying(300) NOT NULL, "CompanyId" integer, "Password" character varying(1024) NOT NULL, "UserType" character varying(300) NOT NULL, CONSTRAINT "UQ_cea39faf4a39ed8e65a5ebf70cf" UNIQUE ("DateOfBirth"), CONSTRAINT "UQ_05e947a5af041b9b4762c4b1d29" UNIQUE ("UserType"), CONSTRAINT "PK_6f0365f0d07dbeeb1ccf4a4f8f5" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE TABLE "tblUserType" ("Id" SERIAL NOT NULL, "CreateDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "CreatedBy" character varying(300), "ModifiedDate" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "LastChangedBy" character varying(300), "Name" character varying(300), "Email" character varying(300) NOT NULL, "Remarks" character varying(300), "ZipCode" character varying(300), "Address" character varying(300), "PhoneNumber" character varying(300), "Image" character varying(300), CONSTRAINT "PK_1921cbe0705dff719663f3f4b1b" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`ALTER TABLE "tblTransactionReceiptStatus" ADD CONSTRAINT "FK_af5d69d475c147de7b0794ae415" FOREIGN KEY ("transactionReceiptId") REFERENCES "tblTransactionReceipt"("Id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tblTransactionReceipt" ADD CONSTRAINT "FK_b0d553e9df906047f1f1441fc7d" FOREIGN KEY ("ProjectID") REFERENCES "tblProject"("Id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tblNftTransfer" ADD CONSTRAINT "FK_a4f9df7b7ce3e0d0add86614c37" FOREIGN KEY ("ProjectId") REFERENCES "tblProject"("Id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tblNftTransfer" ADD CONSTRAINT "FK_e0708ab542dc96bfbdb06c6eeeb" FOREIGN KEY ("NftInfoId") REFERENCES "tblNftInfo"("Id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tblNftInfo" ADD CONSTRAINT "FK_eb9d7cb4b06e31b9a57718adb11" FOREIGN KEY ("ProjectId") REFERENCES "tblProject"("Id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tblVote" ADD CONSTRAINT "FK_8d8e0dedc3b86242678dfef7429" FOREIGN KEY ("ProposalId") REFERENCES "tblProposal"("Id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tblVote" ADD CONSTRAINT "FK_25eb73ecdf4a5a0edc1801aea54" FOREIGN KEY ("ProjectId") REFERENCES "tblProject"("Id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tblTokenDistribution" ADD CONSTRAINT "FK_130e2ffb3b519ad94e100ba40a4" FOREIGN KEY ("ProjectId") REFERENCES "tblProject"("Id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tblTokenDistribution" ADD CONSTRAINT "FK_90080663aa5358ee269ab323a39" FOREIGN KEY ("TokenDistributionTypeId") REFERENCES "tblTokenDistributionType"("Id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tblTokenDistributionType" ADD CONSTRAINT "FK_03b1db50e5c963127d70c921daf" FOREIGN KEY ("ProjectId") REFERENCES "tblProject"("Id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tblFundRising" ADD CONSTRAINT "FK_d207ed4003007727539284932d6" FOREIGN KEY ("ProjectId") REFERENCES "tblProject"("Id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tblSupportProject" ADD CONSTRAINT "FK_d6e37a942267c89f2f26000db32" FOREIGN KEY ("ProjectId") REFERENCES "tblProject"("Id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tblProposal" ADD CONSTRAINT "FK_2c70fbc66e446b3a8e5c96cb4c5" FOREIGN KEY ("ProjectId") REFERENCES "tblProject"("Id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tblBlackListedProposalEOA" ADD CONSTRAINT "FK_e3795f1b4ac0f76d1a43bf33118" FOREIGN KEY ("ProposalId") REFERENCES "tblProposal"("Id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tblCallbackRequest" ADD CONSTRAINT "FK_72e9afeb27baabbbbd297513eef" FOREIGN KEY ("ProjectId") REFERENCES "tblProject"("Id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "tblCallbackRequest" DROP CONSTRAINT "FK_72e9afeb27baabbbbd297513eef"`);
        await queryRunner.query(`ALTER TABLE "tblBlackListedProposalEOA" DROP CONSTRAINT "FK_e3795f1b4ac0f76d1a43bf33118"`);
        await queryRunner.query(`ALTER TABLE "tblProposal" DROP CONSTRAINT "FK_2c70fbc66e446b3a8e5c96cb4c5"`);
        await queryRunner.query(`ALTER TABLE "tblSupportProject" DROP CONSTRAINT "FK_d6e37a942267c89f2f26000db32"`);
        await queryRunner.query(`ALTER TABLE "tblFundRising" DROP CONSTRAINT "FK_d207ed4003007727539284932d6"`);
        await queryRunner.query(`ALTER TABLE "tblTokenDistributionType" DROP CONSTRAINT "FK_03b1db50e5c963127d70c921daf"`);
        await queryRunner.query(`ALTER TABLE "tblTokenDistribution" DROP CONSTRAINT "FK_90080663aa5358ee269ab323a39"`);
        await queryRunner.query(`ALTER TABLE "tblTokenDistribution" DROP CONSTRAINT "FK_130e2ffb3b519ad94e100ba40a4"`);
        await queryRunner.query(`ALTER TABLE "tblVote" DROP CONSTRAINT "FK_25eb73ecdf4a5a0edc1801aea54"`);
        await queryRunner.query(`ALTER TABLE "tblVote" DROP CONSTRAINT "FK_8d8e0dedc3b86242678dfef7429"`);
        await queryRunner.query(`ALTER TABLE "tblNftInfo" DROP CONSTRAINT "FK_eb9d7cb4b06e31b9a57718adb11"`);
        await queryRunner.query(`ALTER TABLE "tblNftTransfer" DROP CONSTRAINT "FK_e0708ab542dc96bfbdb06c6eeeb"`);
        await queryRunner.query(`ALTER TABLE "tblNftTransfer" DROP CONSTRAINT "FK_a4f9df7b7ce3e0d0add86614c37"`);
        await queryRunner.query(`ALTER TABLE "tblTransactionReceipt" DROP CONSTRAINT "FK_b0d553e9df906047f1f1441fc7d"`);
        await queryRunner.query(`ALTER TABLE "tblTransactionReceiptStatus" DROP CONSTRAINT "FK_af5d69d475c147de7b0794ae415"`);
        await queryRunner.query(`DROP TABLE "tblUserType"`);
        await queryRunner.query(`DROP TABLE "tblUserInfo"`);
        await queryRunner.query(`DROP TABLE "tblInvitation"`);
        await queryRunner.query(`DROP TABLE "tblCompany"`);
        await queryRunner.query(`DROP TABLE "tblCallbackRequest"`);
        await queryRunner.query(`DROP TABLE "tblBlackListedProposalEOA"`);
        await queryRunner.query(`DROP TABLE "tblProposal"`);
        await queryRunner.query(`DROP TABLE "tblProject"`);
        await queryRunner.query(`DROP TABLE "tblSupportProject"`);
        await queryRunner.query(`DROP TABLE "tblFundRising"`);
        await queryRunner.query(`DROP TABLE "tblTokenDistributionType"`);
        await queryRunner.query(`DROP TABLE "tblTokenDistribution"`);
        await queryRunner.query(`DROP TABLE "tblVote"`);
        await queryRunner.query(`DROP TABLE "tblNftInfo"`);
        await queryRunner.query(`DROP TABLE "tblNftTransfer"`);
        await queryRunner.query(`DROP TYPE "public"."tblNftTransfer_operation_enum"`);
        await queryRunner.query(`DROP TABLE "tblTransactionReceipt"`);
        await queryRunner.query(`DROP TYPE "public"."tblTransactionReceipt_functionname_enum"`);
        await queryRunner.query(`DROP TYPE "public"."tblTransactionReceipt_queuestatus_enum"`);
        await queryRunner.query(`DROP TABLE "tblTransactionReceiptStatus"`);
    }

}
